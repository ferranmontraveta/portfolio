"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

const crypto = require(`crypto`);

module.exports =
/*#__PURE__*/
function () {
  var _onCreateNode = (0, _asyncToGenerator2.default)(function* ({
    node,
    getNode,
    loadNodeContent,
    actions,
    createNodeId
  }) {
    const createNode = actions.createNode,
          createParentChildLink = actions.createParentChildLink; // We only care about markdown content.

    if (node.internal.mediaType !== `text/richtext`) {
      return;
    }

    const content = yield loadNodeContent(node);
    const richTextNode = {
      id: createNodeId(`${node.id} >>> ContentfulRichText`),
      children: [],
      parent: node.id,
      internal: {
        content,
        type: `ContentfulRichText`
      }
    };
    richTextNode.internal.contentDigest = crypto.createHash(`md5`).update(JSON.stringify(richTextNode)).digest(`hex`);
    createNode(richTextNode);
    createParentChildLink({
      parent: node,
      child: richTextNode
    });
  });

  function onCreateNode(_x) {
    return _onCreateNode.apply(this, arguments);
  }

  return onCreateNode;
}();